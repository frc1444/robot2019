plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2019.3.2"
}

def ROBOT_MAIN_CLASS = "com.first1444.frc.robot2019.Main"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        roboRIO("roborio") {
            // Team number is loaded either from the .wpilib/wpilib_preferences.json
            // or from command line. If not found an exception will be thrown.
            // You can use getTeamOrDefault(team) instead of getTeamNumber if you
            // want to store a team number in this file.
            team = frc.getTeamNumber()
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = frc.getDebugOrDefault(false)
        }
        // Built in artifact to deploy arbitrary files to the roboRIO.
        fileTreeArtifact('frcStaticFileDeploy') {
            // The directory below is the local directory to deploy
            files = fileTree(dir: 'src/main/deploy')
            // Deploy to RoboRIO target, into /home/lvuser/deploy
            targets << "roborio"
            directory = '/home/lvuser/deploy'
        }
    }
}

// Maven central needed for JUnit
repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    flatDir{
        dirs './libs/'
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)
//    testCompile 'junit:junit:4.12'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    
    /*
    compile name: 'api-java-5.12.0'
    compile name: 'api-java-5.12.0-javadoc'
    compile name: 'api-java-5.12.0-sources'
    
    compile name: 'wpiapi-java-5.12.0'
    compile name: 'wpiapi-java-5.12.0-javadoc'
    compile name: 'wpiapi-java-5.12.0-sources'
    */
    
    compile 'com.github.retrodaredevil:abstract-controller-lib:v1.4.4'
    compile 'com.github.retrodaredevil:action-lib:v1.1.2'
    
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    // https://mvnrepository.com/artifact/org.zeromq/jeromq
    compile group: 'org.zeromq', name: 'jeromq', version: '0.4.3'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}

wrapper {
    gradleVersion = '5.0'
}

